@page "/owners/create"
@inject IRepository repository
@inject NavigationManager navigationManager
@inject SweetAlertService sweetAlertService

<h3>Agregar Propietario</h3>

<OwnerForm @ref="ownerForm" Owner="owner" OnValidSubmit="Create" ReturnAction="Return" />

@code {
    private Owner? owner = new();
    private OwnerForm? ownerForm;

    private async Task Create()
    {
        var responseHttp = await repository.Post("/api/owners", owner);
        if (responseHttp.Error)
        {
            var message = await responseHttp.GetErrorMessageAsync();
            var Icon = SweetAlertIcon.Error;
            await sweetAlertService.FireAsync("Error", message, Icon);
            return;
        }
        else
        {
            ownerForm!.FormPostedSuccessfully = true;
            await sweetAlertService.FireAsync(new SweetAlertOptions
                {
                    Title = "Completado",
                    Text = "Se ha agregado el usuario con éxito",
                    Icon = SweetAlertIcon.Success,
                    ShowCancelButton = false
                });
            navigationManager.NavigateTo("/owners");
        }
    }

    private void Return()
    {
        navigationManager.NavigateTo("/owners");
    }
}
