@page "/brands/create"
@inject IRepository repository
@inject NavigationManager navigationManager
@inject SweetAlertService sweetAlertService

<h3>Agregar Marca</h3>

<BrandForm @ref="brandform" Brand="brand" OnValidSubmit="Create" ReturnAction="Return" />

@code {
    private Brand brand = new();
    private BrandForm? brandform;

    private async Task Create()
    {
        var responseHttp = await repository.Post("/api/brands", brand);
        if (responseHttp.Error)
        {
            var message = await responseHttp.GetErrorMessageAsync();
            var Icon = SweetAlertIcon.Error;
            await sweetAlertService.FireAsync("Error", message, Icon);
            return;
        }
        else
        {
            brandform!.FormPostedSuccessfully = true;
            await sweetAlertService.FireAsync(new SweetAlertOptions
                {
                    Title = "Completado",
                    Text = "Se ha agregado la marca con éxito",
                    Icon = SweetAlertIcon.Success,
                    ShowCancelButton = false
                });
            navigationManager.NavigateTo("/brands");
        }

    }

    private void Return()
    {
        navigationManager.NavigateTo("/brands");
    }
}
